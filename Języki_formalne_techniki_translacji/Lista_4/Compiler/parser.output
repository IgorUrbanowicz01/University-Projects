Terminals unused in grammar

    SCAN_ERR
    TOKEN_EOF


Grammar

    0 $accept: program $end

    1 program: procedures_decl main

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE proc_head IS X_BEGIN maybe_stmts END
    4                | ε

    5 proc_head: IDENT LPR decl RPR

    6 decl: decl COMMA ident
    7     | ident

    8 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts END
    9     | PROGRAM IS X_BEGIN maybe_stmts END

   10 stmt: expr
   11     | if_stmt
   12     | read_stmt
   13     | write_stmt
   14     | while_stmt
   15     | repeat_stmt
   16     | function_head_stmt

   17 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts ENDIF
   18        | IF expr THEN maybe_stmts ENDIF

   19 read_stmt: READ expr SEMICOLON

   20 write_stmt: WRITE expr SEMICOLON

   21 while_stmt: WHILE expr DO maybe_stmts ENDWHILE

   22 repeat_stmt: REPEAT maybe_stmts UNTIL expr SEMICOLON

   23 function_head_stmt: proc_head SEMICOLON

   24 maybe_stmts: ε
   25            | stmt maybe_stmts

   26 expr: expr6

   27 expr6: expr5 ASSIGN expr6 SEMICOLON
   28      | expr5

   29 expr5: expr5 LT expr4
   30      | expr5 LEQ expr4
   31      | expr5 GT expr4
   32      | expr5 GEQ expr4
   33      | expr5 EQ expr4
   34      | expr5 NEQ expr4
   35      | expr4

   36 expr4: expr4 ADD expr3
   37      | expr4 SUB expr3
   38      | expr3

   39 expr3: expr3 MUL expr1
   40      | expr3 DIV expr1
   41      | expr3 MOD expr1
   42      | expr1

   43 expr1: atom

   44 atom: ident
   45     | INT_LIT

   46 ident: IDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROCEDURE (258) 2 3
    IS (259) 2 3 8 9
    VAR (260) 2 8
    X_BEGIN (261) 2 3 8 9
    END (262) 2 3 8 9
    PROGRAM (263) 8 9
    IF (264) 17 18
    THEN (265) 17 18
    ELSE (266) 17
    ENDIF (267) 17 18
    WHILE (268) 21
    DO (269) 21
    ENDWHILE (270) 21
    REPEAT (271) 22
    UNTIL (272) 22
    READ (273) 19
    WRITE (274) 20
    LPR (275) 5
    RPR (276) 5
    ASSIGN (277) 27
    COMMA (278) 6
    SEMICOLON (279) 19 20 22 23 27
    EQ (280) 33
    NEQ (281) 34
    GT (282) 31
    LT (283) 29
    LEQ (284) 30
    GEQ (285) 32
    ADD (286) 36
    SUB (287) 37
    MUL (288) 39
    DIV (289) 40
    MOD (290) 41
    IDENT (291) 5 46
    INT_LIT (292) 45
    SCAN_ERR (293)
    TOKEN_EOF (294)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <decl> (41)
        on left: 1
        on right: 0
    procedures_decl <decl> (42)
        on left: 2 3 4
        on right: 1 2 3
    proc_head <type> (43)
        on left: 5
        on right: 2 3 23
    decl <decl> (44)
        on left: 6 7
        on right: 2 5 6 8
    main <decl> (45)
        on left: 8 9
        on right: 1
    stmt <stmt> (46)
        on left: 10 11 12 13 14 15 16
        on right: 25
    if_stmt <stmt> (47)
        on left: 17 18
        on right: 11
    read_stmt <expr> (48)
        on left: 19
        on right: 12
    write_stmt <stmt> (49)
        on left: 20
        on right: 13
    while_stmt <stmt> (50)
        on left: 21
        on right: 14
    repeat_stmt <stmt> (51)
        on left: 22
        on right: 15
    function_head_stmt <stmt> (52)
        on left: 23
        on right: 16
    maybe_stmts <stmt> (53)
        on left: 24 25
        on right: 2 3 8 9 17 18 21 22 25
    expr <expr> (54)
        on left: 26
        on right: 10 17 18 19 20 21 22
    expr6 <expr> (55)
        on left: 27 28
        on right: 26 27
    expr5 <expr> (56)
        on left: 29 30 31 32 33 34 35
        on right: 27 28 29 30 31 32 33 34
    expr4 <expr> (57)
        on left: 36 37 38
        on right: 29 30 31 32 33 34 35 36 37
    expr3 <expr> (58)
        on left: 39 40 41 42
        on right: 36 37 38 39 40 41
    expr1 <expr> (59)
        on left: 43
        on right: 39 40 41 42
    atom <expr> (60)
        on left: 44 45
        on right: 43
    ident <ident> (61)
        on left: 46
        on right: 6 7 44


State 0

    0 $accept: • program $end

    $default  reduce using rule 4 (procedures_decl)

    program          go to state 1
    procedures_decl  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: procedures_decl • main
    2 procedures_decl: procedures_decl • PROCEDURE proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl • PROCEDURE proc_head IS X_BEGIN maybe_stmts END

    PROCEDURE  shift, and go to state 4
    PROGRAM    shift, and go to state 5

    main  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 procedures_decl: procedures_decl PROCEDURE • proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE • proc_head IS X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 7

    proc_head  go to state 8


State 5

    8 main: PROGRAM • IS VAR decl X_BEGIN maybe_stmts END
    9     | PROGRAM • IS X_BEGIN maybe_stmts END

    IS  shift, and go to state 9


State 6

    1 program: procedures_decl main •

    $default  reduce using rule 1 (program)


State 7

    5 proc_head: IDENT • LPR decl RPR

    LPR  shift, and go to state 10


State 8

    2 procedures_decl: procedures_decl PROCEDURE proc_head • IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE proc_head • IS X_BEGIN maybe_stmts END

    IS  shift, and go to state 11


State 9

    8 main: PROGRAM IS • VAR decl X_BEGIN maybe_stmts END
    9     | PROGRAM IS • X_BEGIN maybe_stmts END

    VAR      shift, and go to state 12
    X_BEGIN  shift, and go to state 13


State 10

    5 proc_head: IDENT LPR • decl RPR

    IDENT  shift, and go to state 14

    decl   go to state 15
    ident  go to state 16


State 11

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS • VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE proc_head IS • X_BEGIN maybe_stmts END

    VAR      shift, and go to state 17
    X_BEGIN  shift, and go to state 18


State 12

    8 main: PROGRAM IS VAR • decl X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 14

    decl   go to state 19
    ident  go to state 16


State 13

    9 main: PROGRAM IS X_BEGIN • maybe_stmts END

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 35
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 14

   46 ident: IDENT •

    $default  reduce using rule 46 (ident)


State 15

    5 proc_head: IDENT LPR decl • RPR
    6 decl: decl • COMMA ident

    RPR    shift, and go to state 44
    COMMA  shift, and go to state 45


State 16

    7 decl: ident •

    $default  reduce using rule 7 (decl)


State 17

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR • decl X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 14

    decl   go to state 46
    ident  go to state 16


State 18

    3 procedures_decl: procedures_decl PROCEDURE proc_head IS X_BEGIN • maybe_stmts END

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 47
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 19

    6 decl: decl • COMMA ident
    8 main: PROGRAM IS VAR decl • X_BEGIN maybe_stmts END

    X_BEGIN  shift, and go to state 48
    COMMA    shift, and go to state 45


State 20

   17 if_stmt: IF • expr THEN maybe_stmts ELSE maybe_stmts ENDIF
   18        | IF • expr THEN maybe_stmts ENDIF

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr   go to state 49
    expr6  go to state 37
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 21

   21 while_stmt: WHILE • expr DO maybe_stmts ENDWHILE

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr   go to state 50
    expr6  go to state 37
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 22

   22 repeat_stmt: REPEAT • maybe_stmts UNTIL expr SEMICOLON

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 51
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 23

   19 read_stmt: READ • expr SEMICOLON

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr   go to state 52
    expr6  go to state 37
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 24

   20 write_stmt: WRITE • expr SEMICOLON

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr   go to state 53
    expr6  go to state 37
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 25

    5 proc_head: IDENT • LPR decl RPR
   46 ident: IDENT •

    LPR  shift, and go to state 10

    $default  reduce using rule 46 (ident)


State 26

   45 atom: INT_LIT •

    $default  reduce using rule 45 (atom)


State 27

   23 function_head_stmt: proc_head • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 28

   25 maybe_stmts: stmt • maybe_stmts

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 55
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 29

   11 stmt: if_stmt •

    $default  reduce using rule 11 (stmt)


State 30

   12 stmt: read_stmt •

    $default  reduce using rule 12 (stmt)


State 31

   13 stmt: write_stmt •

    $default  reduce using rule 13 (stmt)


State 32

   14 stmt: while_stmt •

    $default  reduce using rule 14 (stmt)


State 33

   15 stmt: repeat_stmt •

    $default  reduce using rule 15 (stmt)


State 34

   16 stmt: function_head_stmt •

    $default  reduce using rule 16 (stmt)


State 35

    9 main: PROGRAM IS X_BEGIN maybe_stmts • END

    END  shift, and go to state 56


State 36

   10 stmt: expr •

    $default  reduce using rule 10 (stmt)


State 37

   26 expr: expr6 •

    $default  reduce using rule 26 (expr)


State 38

   27 expr6: expr5 • ASSIGN expr6 SEMICOLON
   28      | expr5 •
   29 expr5: expr5 • LT expr4
   30      | expr5 • LEQ expr4
   31      | expr5 • GT expr4
   32      | expr5 • GEQ expr4
   33      | expr5 • EQ expr4
   34      | expr5 • NEQ expr4

    ASSIGN  shift, and go to state 57
    EQ      shift, and go to state 58
    NEQ     shift, and go to state 59
    GT      shift, and go to state 60
    LT      shift, and go to state 61
    LEQ     shift, and go to state 62
    GEQ     shift, and go to state 63

    $default  reduce using rule 28 (expr6)


State 39

   35 expr5: expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 35 (expr5)


State 40

   38 expr4: expr3 •
   39 expr3: expr3 • MUL expr1
   40      | expr3 • DIV expr1
   41      | expr3 • MOD expr1

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 38 (expr4)


State 41

   42 expr3: expr1 •

    $default  reduce using rule 42 (expr3)


State 42

   43 expr1: atom •

    $default  reduce using rule 43 (expr1)


State 43

   44 atom: ident •

    $default  reduce using rule 44 (atom)


State 44

    5 proc_head: IDENT LPR decl RPR •

    $default  reduce using rule 5 (proc_head)


State 45

    6 decl: decl COMMA • ident

    IDENT  shift, and go to state 14

    ident  go to state 69


State 46

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR decl • X_BEGIN maybe_stmts END
    6 decl: decl • COMMA ident

    X_BEGIN  shift, and go to state 70
    COMMA    shift, and go to state 45


State 47

    3 procedures_decl: procedures_decl PROCEDURE proc_head IS X_BEGIN maybe_stmts • END

    END  shift, and go to state 71


State 48

    8 main: PROGRAM IS VAR decl X_BEGIN • maybe_stmts END

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 72
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 49

   17 if_stmt: IF expr • THEN maybe_stmts ELSE maybe_stmts ENDIF
   18        | IF expr • THEN maybe_stmts ENDIF

    THEN  shift, and go to state 73


State 50

   21 while_stmt: WHILE expr • DO maybe_stmts ENDWHILE

    DO  shift, and go to state 74


State 51

   22 repeat_stmt: REPEAT maybe_stmts • UNTIL expr SEMICOLON

    UNTIL  shift, and go to state 75


State 52

   19 read_stmt: READ expr • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 53

   20 write_stmt: WRITE expr • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 54

   23 function_head_stmt: proc_head SEMICOLON •

    $default  reduce using rule 23 (function_head_stmt)


State 55

   25 maybe_stmts: stmt maybe_stmts •

    $default  reduce using rule 25 (maybe_stmts)


State 56

    9 main: PROGRAM IS X_BEGIN maybe_stmts END •

    $default  reduce using rule 9 (main)


State 57

   27 expr6: expr5 ASSIGN • expr6 SEMICOLON

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr6  go to state 78
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 58

   33 expr5: expr5 EQ • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 79
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 59

   34 expr5: expr5 NEQ • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 80
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 60

   31 expr5: expr5 GT • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 81
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 61

   29 expr5: expr5 LT • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 82
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 62

   30 expr5: expr5 LEQ • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 83
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 63

   32 expr5: expr5 GEQ • expr4

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr4  go to state 84
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 64

   36 expr4: expr4 ADD • expr3

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr3  go to state 85
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 65

   37 expr4: expr4 SUB • expr3

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr3  go to state 86
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 66

   39 expr3: expr3 MUL • expr1

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr1  go to state 87
    atom   go to state 42
    ident  go to state 43


State 67

   40 expr3: expr3 DIV • expr1

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr1  go to state 88
    atom   go to state 42
    ident  go to state 43


State 68

   41 expr3: expr3 MOD • expr1

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr1  go to state 89
    atom   go to state 42
    ident  go to state 43


State 69

    6 decl: decl COMMA ident •

    $default  reduce using rule 6 (decl)


State 70

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR decl X_BEGIN • maybe_stmts END

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 90
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 71

    3 procedures_decl: procedures_decl PROCEDURE proc_head IS X_BEGIN maybe_stmts END •

    $default  reduce using rule 3 (procedures_decl)


State 72

    8 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts • END

    END  shift, and go to state 91


State 73

   17 if_stmt: IF expr THEN • maybe_stmts ELSE maybe_stmts ENDIF
   18        | IF expr THEN • maybe_stmts ENDIF

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 92
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 74

   21 while_stmt: WHILE expr DO • maybe_stmts ENDWHILE

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 93
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 75

   22 repeat_stmt: REPEAT maybe_stmts UNTIL • expr SEMICOLON

    IDENT    shift, and go to state 14
    INT_LIT  shift, and go to state 26

    expr   go to state 94
    expr6  go to state 37
    expr5  go to state 38
    expr4  go to state 39
    expr3  go to state 40
    expr1  go to state 41
    atom   go to state 42
    ident  go to state 43


State 76

   19 read_stmt: READ expr SEMICOLON •

    $default  reduce using rule 19 (read_stmt)


State 77

   20 write_stmt: WRITE expr SEMICOLON •

    $default  reduce using rule 20 (write_stmt)


State 78

   27 expr6: expr5 ASSIGN expr6 • SEMICOLON

    SEMICOLON  shift, and go to state 95


State 79

   33 expr5: expr5 EQ expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 33 (expr5)


State 80

   34 expr5: expr5 NEQ expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 34 (expr5)


State 81

   31 expr5: expr5 GT expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 31 (expr5)


State 82

   29 expr5: expr5 LT expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 29 (expr5)


State 83

   30 expr5: expr5 LEQ expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 30 (expr5)


State 84

   32 expr5: expr5 GEQ expr4 •
   36 expr4: expr4 • ADD expr3
   37      | expr4 • SUB expr3

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 32 (expr5)


State 85

   36 expr4: expr4 ADD expr3 •
   39 expr3: expr3 • MUL expr1
   40      | expr3 • DIV expr1
   41      | expr3 • MOD expr1

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 36 (expr4)


State 86

   37 expr4: expr4 SUB expr3 •
   39 expr3: expr3 • MUL expr1
   40      | expr3 • DIV expr1
   41      | expr3 • MOD expr1

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    MOD  shift, and go to state 68

    $default  reduce using rule 37 (expr4)


State 87

   39 expr3: expr3 MUL expr1 •

    $default  reduce using rule 39 (expr3)


State 88

   40 expr3: expr3 DIV expr1 •

    $default  reduce using rule 40 (expr3)


State 89

   41 expr3: expr3 MOD expr1 •

    $default  reduce using rule 41 (expr3)


State 90

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR decl X_BEGIN maybe_stmts • END

    END  shift, and go to state 96


State 91

    8 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts END •

    $default  reduce using rule 8 (main)


State 92

   17 if_stmt: IF expr THEN maybe_stmts • ELSE maybe_stmts ENDIF
   18        | IF expr THEN maybe_stmts • ENDIF

    ELSE   shift, and go to state 97
    ENDIF  shift, and go to state 98


State 93

   21 while_stmt: WHILE expr DO maybe_stmts • ENDWHILE

    ENDWHILE  shift, and go to state 99


State 94

   22 repeat_stmt: REPEAT maybe_stmts UNTIL expr • SEMICOLON

    SEMICOLON  shift, and go to state 100


State 95

   27 expr6: expr5 ASSIGN expr6 SEMICOLON •

    $default  reduce using rule 27 (expr6)


State 96

    2 procedures_decl: procedures_decl PROCEDURE proc_head IS VAR decl X_BEGIN maybe_stmts END •

    $default  reduce using rule 2 (procedures_decl)


State 97

   17 if_stmt: IF expr THEN maybe_stmts ELSE • maybe_stmts ENDIF

    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    REPEAT   shift, and go to state 22
    READ     shift, and go to state 23
    WRITE    shift, and go to state 24
    IDENT    shift, and go to state 25
    INT_LIT  shift, and go to state 26

    $default  reduce using rule 24 (maybe_stmts)

    proc_head           go to state 27
    stmt                go to state 28
    if_stmt             go to state 29
    read_stmt           go to state 30
    write_stmt          go to state 31
    while_stmt          go to state 32
    repeat_stmt         go to state 33
    function_head_stmt  go to state 34
    maybe_stmts         go to state 101
    expr                go to state 36
    expr6               go to state 37
    expr5               go to state 38
    expr4               go to state 39
    expr3               go to state 40
    expr1               go to state 41
    atom                go to state 42
    ident               go to state 43


State 98

   18 if_stmt: IF expr THEN maybe_stmts ENDIF •

    $default  reduce using rule 18 (if_stmt)


State 99

   21 while_stmt: WHILE expr DO maybe_stmts ENDWHILE •

    $default  reduce using rule 21 (while_stmt)


State 100

   22 repeat_stmt: REPEAT maybe_stmts UNTIL expr SEMICOLON •

    $default  reduce using rule 22 (repeat_stmt)


State 101

   17 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts • ENDIF

    ENDIF  shift, and go to state 102


State 102

   17 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts ENDIF •

    $default  reduce using rule 17 (if_stmt)
